---
import MainLayout from '../layouts/MainLayout.astro';
import StockSearch from '../components/StockSearch.astro';
import FinancialTrends from '../components/FinancialTrends.astro';
import FairValueGauge from '../components/FairValueGauge.astro';
import BigFourMetrics from '../components/BigFourMetrics.astro';
import DetailedFinancialTable from '../components/DetailedFinancialTable.astro';
import DividendAnalysis from '../components/DividendAnalysis.astro';
import ComparisonPanel from '../components/ComparisonPanel.astro';
import NewsAndSentiment from '../components/NewsAndSentiment.astro';
import NoDataFallback from '../components/NoDataFallback.astro';
import RuleOneAnalysis from '../components/RuleOneAnalysis.astro';
import BatchAnalysisPanel from '../components/BatchAnalysisPanel.astro';
import Watchlist from '../components/Watchlist.astro';
import UserProfile from '../components/UserProfile.astro';


// Define page title
const pageTitle = "Landing";

// Mock data for demonstration (replace with actual data fetching logic)
const stockSymbol = "AAPL";
const companyName = "Apple Inc.";
const isLoading = false; // Set to true when fetching data

const financialData = {
  incomeStatement: [
    { year: "2023", revenue: 383285, netIncome: 100000, eps: 6.00 },
    { year: "2022", revenue: 394328, netIncome: 99803, eps: 5.90 },
    { year: "2021", revenue: 365817, netIncome: 94680, eps: 5.61 },
    { year: "2020", revenue: 274515, netIncome: 57411, eps: 3.28 },
    { year: "2019", revenue: 260174, netIncome: 55256, eps: 2.97 },
  ],
  balanceSheet: [
    { year: "2023", totalCurrentAssets: 134836, totalCurrentLiabilities: 145309, totalDebt: 104613, totalEquity: 62147 },
    { year: "2022", totalCurrentAssets: 135405, totalCurrentLiabilities: 153982, totalDebt: 108256, totalEquity: 58324 },
    { year: "2021", totalCurrentAssets: 134836, totalCurrentLiabilities: 145309, totalDebt: 104613, totalEquity: 62147 },
    { year: "2020", totalCurrentAssets: 143713, totalCurrentLiabilities: 106189, totalDebt: 98667, totalEquity: 65339 },
    { year: "2019", totalCurrentAssets: 162819, totalCurrentLiabilities: 105718, totalDebt: 93864, totalEquity: 90488 },
  ],
  cashFlowStatement: [
    { year: "2023", freeCashFlow: 99584 },
    { year: "2022", freeCashFlow: 111443 },
    { year: "2021", freeCashFlow: 104038 },
    { year: "2020", freeCashFlow: 73365 },
    { year: "2019", freeCashFlow: 58823 },
  ],
};

const peRatio = 28.5;
const industryPeRatio = 25.0;
const sectorPeRatio = 30.0;
const historicalPeRatios = [
  { year: "2019", peRatio: 18.0 },
  { year: "2020", peRatio: 25.0 },
  { year: "2021", peRatio: 30.0 },
  { year: "2022", peRatio: 27.0 },
  { year: "2023", peRatio: 28.5 },
];

const currentPrice = 150.25;
const stickerPrice = 187.50;
const mosPrice = 131.25;

const analysisData = {
  overallScore: 85,
  breakdown: [
    { category: "Moat", score: 90, summary: "Strong brand and ecosystem." },
    { category: "Management", score: 80, summary: "Experienced leadership." },
    { category: "Financials", score: 85, summary: "Consistent growth and profitability." },
  ],
};

const newsItems = [
  { title: "Apple Announces New iPhone", summary: "Apple unveiled its latest iPhone model...", source: "TechCrunch", date: "2024-09-10", link: "#", sentiment: "positive" as "positive" | "neutral" | "negative" },
  { title: "AAPL Stock Price Rises", summary: "Apple's stock price increased today...", source: "Bloomberg", date: "2024-09-10", link: "#", sentiment: "positive" as "positive" | "neutral" | "negative" },
];

const overallSentiment = "positive";

const watchlistItems = [
  { symbol: "MSFT", name: "Microsoft Corp.", price: 300.00, change: 2.50, changePercent: 0.84 },
  { symbol: "GOOGL", name: "Alphabet Inc.", price: 140.00, change: -1.00, changePercent: -0.71 },
];

const dashboardData = {
  portfolioSummary: { totalValue: 100000, todayChange: 500, todayChangePercent: 0.5, overallChange: 10000, overallChangePercent: 10 },
  watchlistSummary: { items: watchlistItems },
  recentActivity: { items: newsItems },
};

const alerts = [
  { type: "info", message: "Market is open." },
  { type: "warning", message: "AAPL earnings report next week." },
];

const userName = "Test User";
const userEmail = "test@example.com";
---

<MainLayout title={pageTitle}>
  <div class="container mx-auto p-4">
    <h1 class="text-3xl font-bold mb-6">{pageTitle}</h1>

    <!-- Example usage of converted components -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      <div class="lg:col-span-1">
        <StockSearch />
      </div>
      <div class="lg:col-span-2">
        <NewsAndSentiment newsItems={newsItems} overallSentiment={overallSentiment} isLoading={isLoading} />
      </div>
      <div class="lg:col-span-3">
        <FinancialTrends financialData={financialData} isLoading={isLoading} />
      </div>
      <div class="lg:col-span-1">
        <FairValueGauge currentPrice={currentPrice} stickerPrice={stickerPrice} mosPrice={mosPrice} isLoading={isLoading} />
      </div>
      <div class="lg:col-span-2">
        {/* Pass stockSymbol to BigFourMetrics */}
        <BigFourMetrics stockSymbol={stockSymbol} />
      </div>
      <div class="lg:col-span-3">
        <DetailedFinancialTable financialData={financialData} isLoading={isLoading} />
      </div>
      <div class="lg:col-span-1">
        <DividendAnalysis dividendData={{ annualDividends: financialData.cashFlowStatement, annualEarnings: financialData.incomeStatement, currentPrice: currentPrice }} isLoading={isLoading} /> {/* Using cashFlowStatement and incomeStatement as placeholders */}
      </div>
      <div class="lg:col-span-2">
        <ComparisonPanel stockSymbol1="AAPL" stockSymbol2="MSFT" comparisonData={{ AAPL: { price: 150.25, marketCap: 2.5e12, peRatio: 28.5, revenueGrowth5Y: 12, earningsGrowth5Y: 15, equityGrowth5Y: 10, roic5Y: 25, moatScore: 4.5 }, MSFT: { price: 300.00, marketCap: 2.2e12, peRatio: 35.0, revenueGrowth5Y: 10, earningsGrowth5Y: 12, equityGrowth5Y: 8, roic5Y: 20, moatScore: 4.0 } }} isLoading={isLoading} /> {/* Mock comparison data */}
      </div>
      <div class="lg:col-span-3">
        <RuleOneAnalysis analysisData={analysisData} isLoading={isLoading} />
      </div>
      <div class="lg:col-span-1">
        <Watchlist watchlistItems={watchlistItems} isLoading={isLoading} />
      </div>
      <div class="lg:col-span-1">
        <UserProfile userName={userName} userEmail={userEmail} isLoading={isLoading} />
      </div>
      <div class="lg:col-span-1">
        <BatchAnalysisPanel isLoading={isLoading} /> {/* Example usage, status/progress would be dynamic */}
      </div>
    </div>
  </div>
</MainLayout>
