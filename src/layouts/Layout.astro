---
import AppHeader from '../components/Header.astro'; // Updated import alias
import Footer from '../components/Footer.astro';
// import type { UserData } from '../components/Header.astro'; // No named export, so remove this line

interface UserData {
  id: string;
  name: string;
  email: string;
  // Add other fields as needed
}

interface Props {
  title: string;
  article?: boolean;
  isAuthenticated?: boolean;
  user?: UserData;
}

const { title, isAuthenticated: isAuthenticatedProp, user: userProp } = Astro.props;

let isAuthenticated: boolean;
let user: UserData | undefined;

if (typeof isAuthenticatedProp === 'boolean' && userProp !== undefined) {
  isAuthenticated = isAuthenticatedProp;
  user = userProp;
} else {
  isAuthenticated = false;
  user = undefined;
  try {
    const response = await fetch(Astro.url.origin + '/api/auth/status');
    if (response.ok) {
      const authData = await response.json();
      isAuthenticated = authData.isAuthenticated;
      user = authData.user;
    } else {
      console.error('Failed to fetch authentication status:', response.status);
    }
  } catch (error) {
    console.error('Error fetching authentication status:', error);
  }
}

---

<!doctype html>
<html lang="en" class="dark">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Rule One Investor Dashboard" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title} | Rule One Assistant</title>
		{/* The global.css is likely where Tailwind directives are, or should be if not already handled by astro.config.mjs integration */}
	</head>
	<body class="min-h-screen bg-background font-sans antialiased">
		<div class="relative flex min-h-screen flex-col">
			<AppHeader />
			<main class="flex-1">
				<slot />
			</main>
			<Footer />
		</div>
	</body>
</html>

