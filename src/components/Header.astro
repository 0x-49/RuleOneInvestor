---
// Props for the component
interface Props {
  currentPage?: string;
}

const { currentPage = "dashboard" } = Astro.props;

// Navigation items
const navItems = [
  { name: "Dashboard", href: "/dashboard", id: "dashboard" },
  // Update Stock Analysis link to point to a placeholder stock details page
  { name: "Stock Analysis", href: "/stock/AAPL", id: "stock-analysis" }, // Note: This should be dynamic
  { name: "Screening", href: "/screening", id: "screening" },
  // Remove Watchlist link as it's on the dashboard
  // { name: "Watchlist", href: "/watchlist", id: "watchlist" }
];
---

<header class="bg-white shadow">
  <div class="container mx-auto px-4 py-4 flex justify-between items-center">
    <div class="flex items-center space-x-4">
      {/* Link the title to the landing page */}
      <a href="/" class="text-2xl font-bold text-blue-700 hover:text-blue-800">Rule One Investor</a>
    </div>

    <nav>
      <ul class="flex space-x-6">
        {navItems.map((item) => (
          <li>
            <a
              href={item.href}
              class={`text-gray-600 hover:text-blue-700 px-2 py-1 rounded-md ${currentPage === item.id ? 'bg-blue-50 text-blue-700 font-medium' : ''}`}
            >
              {item.name}
            </a>
          </li>
        ))}
      </ul>
    </nav>

    <!-- Placeholder for Header Actions (e.g., Login/Logout, Theme Toggle) -->
    <div>
      <!-- You would include your HeaderActions component or similar logic here -->
      <!-- Example: <HeaderActions /> -->
      <button class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
        Login
      </button>
    </div>
  </div>
</header>
