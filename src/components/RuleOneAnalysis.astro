---
// Define interface for analysis data structure (replace with actual types if available)
interface AnalysisBreakdownItem {
  category?: string;
  score?: number;
  summary?: string;
}

interface RuleOneAnalysisData {
  overallScore?: number;
  breakdown?: AnalysisBreakdownItem[];
}

// Props for the component
interface Props {
  stockSymbol?: string;
  companyName?: string;
  analysisData?: RuleOneAnalysisData;
  isLoading?: boolean;
}

const { stockSymbol, companyName, analysisData, isLoading = false } = Astro.props;

// Helper function to determine overall score color
const getScoreColor = (score?: number) => {
  if (score === undefined) return 'text-gray-500';
  if (score >= 80) return 'text-green-600';
  if (score >= 60) return 'text-yellow-600';
  return 'text-red-600';
};

// Helper function to determine overall score text
const getScoreText = (score?: number) => {
  if (score === undefined) return 'N/A';
  if (score >= 80) return 'Strong';
  if (score >= 60) return 'Moderate';
  return 'Weak';
};
---

<div class="bg-white shadow overflow-hidden sm:rounded-lg">
  <div class="px-4 py-5 sm:px-6">
    <h3 class="text-lg leading-6 font-medium text-gray-900">
      Rule One Analysis
    </h3>
    <p class="mt-1 max-w-2xl text-sm text-gray-500">
      Overall Rule One analysis for {companyName || 'Company'} ({stockSymbol || 'TICKER'})
    </p>
  </div>

  <div class="border-t border-gray-200 px-4 py-5 sm:p-6">
    {isLoading ? (
      <!-- Skeleton Loader -->
      <div class="space-y-4">
        <div class="h-6 bg-gray-200 rounded w-48"></div>
        <div class="h-4 bg-gray-200 rounded w-32"></div>
        <div class="h-8 bg-gray-200 rounded w-full"></div>
        {[...Array(4)].map((_, i) => (
          <div class="h-12 bg-gray-200 rounded"></div>
        ))}
      </div>
    ) : !analysisData || analysisData.overallScore === undefined ? (
      <!-- No Data Fallback -->
      <div class="text-center text-gray-500">
        Rule One analysis data not available for {stockSymbol || 'this stock'}.
      </div>
    ) : (
      <!-- Rule One Analysis Content -->
      <div class="space-y-6">
        <!-- Overall Score -->
        <div class="flex items-center justify-between">
          <span class="text-lg font-medium text-gray-900">Overall Rule One Score:</span>
          <span class={`text-2xl font-bold ${getScoreColor(analysisData.overallScore)}`}>
            {analysisData.overallScore.toFixed(0)}/100
          </span>
        </div>

        <!-- Score Breakdown -->
        <div class="space-y-4">
          {analysisData.breakdown?.length! > 0 ? (
            analysisData.breakdown!.map(item => (
              <div class="space-y-2">
                <div class="flex justify-between items-center">
                  <span class="text-sm font-medium text-gray-700">{item.category}:</span>
                  <span class={`text-sm font-bold ${getScoreColor(item.score)}`}>{item.score?.toFixed(0) ?? 'N/A'}/100</span>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-2.5">
                  <div class={`h-2.5 rounded-full ${getScoreColor(item.score).replace('text-', 'bg-')}`} style={`width: ${item.score ?? 0}%;`}></div>
                </div>
                {item.summary && <p class="text-xs text-gray-600">{item.summary}</p>}
              </div>
            ))
          ) : (
            <div class="text-center text-gray-500 text-sm">No breakdown available.</div>
          )}
        </div>
      </div>
    )}
  </div>
</div>
